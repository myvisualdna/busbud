{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/components/table.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n  const getFirstFetch = () => dispatch(FetchAction()); //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  }; //Selectors\n\n\n  const oneFetch = useSelector(state => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(state => state.fetchDepartures.allDepartures);\n  let fetchInfo = \"\";\n\n  if (departuresFetch.departures) {}\n\n  const functionWithPromise = item => {\n    //a function that returns a promise\n    return Promise.resolve(\"ok\");\n  };\n\n  const anAsyncFunction = async item => {\n    return functionWithPromise(item);\n  };\n\n  const getInfo = async () => {\n    return Promise.all(departuresFetch.departures.map(item => anAsyncFunction(item)));\n  };\n\n  getInfo().then(data => {\n    console.log(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      children: \"Get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ResultTable;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/components/table.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Table","FetchAction","ResultTable","dispatch","getFirstFetch","getData","oneFetch","state","firstFetch","mainInformation","departuresFetch","fetchDepartures","allDepartures","fetchInfo","departures","functionWithPromise","item","Promise","resolve","anAsyncFunction","getInfo","all","map","then","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,SAASC,WAAT,GAAuB;AACrB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFqB,CAIrB;;AACA,QAAMK,aAAa,GAAG,MAAMD,QAAQ,CAACF,WAAW,EAAZ,CAApC,CALqB,CAOrB;AACA;;;AACAL,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMQ,aAAa,EAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBD,IAAAA,aAAa;AACd,GAFD,CAbqB,CAgBrB;;;AACA,QAAME,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,eAA7B,CAA5B;AACA,QAAMC,eAAe,GAAGZ,WAAW,CAChCS,KAAD,IAAWA,KAAK,CAACI,eAAN,CAAsBC,aADA,CAAnC;AAIA,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAGH,eAAe,CAACI,UAAnB,EAA+B,CAE9B;;AAED,QAAMC,mBAAmB,GAAIC,IAAD,IAAU;AACpC;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,GAHD;;AAKA,QAAMC,eAAe,GAAG,MAAOH,IAAP,IAAgB;AACtC,WAAOD,mBAAmB,CAACC,IAAD,CAA1B;AACD,GAFD;;AAIA,QAAMI,OAAO,GAAG,YAAY;AAC1B,WAAOH,OAAO,CAACI,GAAR,CACLX,eAAe,CAACI,UAAhB,CAA2BQ,GAA3B,CAAgCN,IAAD,IAAUG,eAAe,CAACH,IAAD,CAAxD,CADK,CAAP;AAGD,GAJD;;AAMAI,EAAAA,OAAO,GAAGG,IAAV,CAAgBC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEnB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAeH,WAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = () => dispatch(FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  };\n  //Selectors\n  const oneFetch = useSelector((state) => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(\n    (state) => state.fetchDepartures.allDepartures\n  );\n\n  let fetchInfo = \"\"\n  if(departuresFetch.departures) {\n    \n  }\n\n  const functionWithPromise = (item) => {\n    //a function that returns a promise\n    return Promise.resolve(\"ok\");\n  };\n\n  const anAsyncFunction = async (item) => {\n    return functionWithPromise(item);\n  };\n\n  const getInfo = async () => {\n    return Promise.all(\n      departuresFetch.departures.map((item) => anAsyncFunction(item))\n    );\n  };\n\n  getInfo().then((data) => {\n    console.log(data);\n  });\n\n  return (\n    <div>\n      <div></div>\n      <button onClick={getData}>Get data</button>\n    </div>\n  );\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}