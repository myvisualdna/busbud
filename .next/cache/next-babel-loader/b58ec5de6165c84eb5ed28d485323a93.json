{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"../components/container\";\nimport FetchAction from \"../redux/actions/fetchAction\";\nimport Table from \"../components/table\";\n\nfunction Index() {\n  _s();\n\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  var dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n  var getFirstFetch = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = dispatch;\n              _context.next = 3;\n              return FetchAction();\n\n            case 3:\n              _context.t1 = _context.sent;\n              return _context.abrupt(\"return\", (0, _context.t0)(_context.t1));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getFirstFetch() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n  useEffect(function () {\n    getFirstFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"this is index\", /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/pages/index.js"],"names":["useEffect","useState","useSelector","useDispatch","Container","FetchAction","Table","Index","dispatch","getFirstFetch"],"mappings":";;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf;AACA,MAAMC,QAAQ,GAAGL,WAAW,EAA5B,CAFe,CAIf;;AACA,MAAMM,aAAa;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAYD,QAAZ;AAAA;AAAA,qBAA2BH,WAAW,EAAtC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbI,aAAa;AAAA;AAAA;AAAA,KAAnB,CALe,CAOf;AACA;;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,+CAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArBQF,K;UAEUJ,W;;;KAFVI,K;AAuBT,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Container from \"../components/container\";\nimport FetchAction from \"../redux/actions/fetchAction\";\nimport Table from \"../components/table\";\n\nfunction Index() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = async () => dispatch(await FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(() => {\n    getFirstFetch();\n  }, []);\n\n  return (\n    <div>\n      <Container>\n        this is index\n        <Table />\n      </Container>\n    </div>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}