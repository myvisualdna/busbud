{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/components/table.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n  const getFirstFetch = () => dispatch(FetchAction()); //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  }; //Selectors\n\n\n  const oneFetch = useSelector(state => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(state => state.fetchDepartures.allDepartures);\n\n  async function fetchRepoInfos() {\n    // load repository details for this array of repo URLs\n    const repos = fetchInfo; // map through the repo list\n\n    const promises = repos.map(async repo => {\n      return {\n        name: repo.departure_time,\n        description: repo.arrival_time\n      };\n    }); // wait until all promises resolve\n\n    const results = await Promise.all(promises);\n    console.log(results); // use the results\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tableTest, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fetchInfo.map(depart => {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: depart.departure_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      children: \"Get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ResultTable;","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/components/table.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Table","FetchAction","ResultTable","dispatch","getFirstFetch","getData","oneFetch","state","firstFetch","mainInformation","departuresFetch","fetchDepartures","allDepartures","fetchRepoInfos","repos","fetchInfo","promises","map","repo","name","departure_time","description","arrival_time","results","Promise","all","console","log","tableTest","depart"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,SAASC,WAAT,GAAuB;AACrB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFqB,CAIrB;;AACA,QAAMK,aAAa,GAAG,MAAMD,QAAQ,CAACF,WAAW,EAAZ,CAApC,CALqB,CAOrB;AACA;;;AACAL,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMQ,aAAa,EAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpBD,IAAAA,aAAa;AACd,GAFD,CAbqB,CAgBrB;;;AACA,QAAME,QAAQ,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,eAA7B,CAA5B;AACA,QAAMC,eAAe,GAAGZ,WAAW,CAChCS,KAAD,IAAWA,KAAK,CAACI,eAAN,CAAsBC,aADA,CAAnC;;AAKA,iBAAeC,cAAf,GAAgC;AAC9B;AACA,UAAMC,KAAK,GAAGC,SAAd,CAF8B,CAI9B;;AACA,UAAMC,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAU,MAAOC,IAAP,IAAgB;AACzC,aAAO;AACLC,QAAAA,IAAI,EAAED,IAAI,CAACE,cADN;AAELC,QAAAA,WAAW,EAAEH,IAAI,CAACI;AAFb,OAAP;AAID,KALgB,CAAjB,CAL8B,CAY9B;;AACA,UAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYT,QAAZ,CAAtB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ,EAd8B,CAe9B;AACD;;AAED,sBACE;AAAA,eACGK,SADH,eAEE;AAAA,gBACGb,SAAS,CAACE,GAAV,CAAeY,MAAD,IAAY;AACzB;AAAA;AAAA,oBAAIA,MAAM,CAACT;AAAX;AAAA;AAAA;AAAA;AAAA;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAQ,MAAA,OAAO,EAAEf,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,eAAeH,WAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = () => dispatch(FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  };\n  //Selectors\n  const oneFetch = useSelector((state) => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(\n    (state) => state.fetchDepartures.allDepartures\n  );\n\n\n  async function fetchRepoInfos() {\n    // load repository details for this array of repo URLs\n    const repos = fetchInfo;\n\n    // map through the repo list\n    const promises = repos.map(async (repo) => {\n      return {\n        name: repo.departure_time,\n        description: repo.arrival_time,\n      };\n    });\n\n    // wait until all promises resolve\n    const results = await Promise.all(promises);\n    console.log(results);\n    // use the results\n  }\n\n  return (\n    <div>\n      {tableTest}\n      <div>\n        {fetchInfo.map((depart) => {\n          <p>{depart.departure_time}</p>;\n        })}\n      </div>\n      <button onClick={getData}>Get data</button>\n    </div>\n  );\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}