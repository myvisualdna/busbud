{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/components/table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  _s();\n\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  var dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n  var getFirstFetch = function getFirstFetch() {\n    return dispatch(FetchAction());\n  }; //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getFirstFetch();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n\n  var getData = function getData() {\n    getFirstFetch();\n  }; //Selectors\n\n\n  var oneFetch = useSelector(function (state) {\n    return state.firstFetch.mainInformation;\n  });\n  var departuresFetch = useSelector(function (state) {\n    return state.fetchDepartures.allDepartures;\n  });\n  var fetchInfo = \"\";\n\n  if (departuresFetch.departures) {\n    fetchInfo;\n  }\n\n  var functionWithPromise = function functionWithPromise(item) {\n    //a function that returns a promise\n    return Promise.resolve(\"ok\");\n  };\n\n  var anAsyncFunction = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", functionWithPromise(item));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function anAsyncFunction(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getInfo = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", Promise.all(departuresFetch.departures.map(function (item) {\n                return anAsyncFunction(item);\n              })));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function getInfo() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  getInfo().then(function (data) {\n    console.log(data);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      children: \"Get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResultTable, \"lQhjc8z8Q4utlQIUEbpbQSaQWdg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ResultTable;\nexport default ResultTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/components/table.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Table","FetchAction","ResultTable","dispatch","getFirstFetch","getData","oneFetch","state","firstFetch","mainInformation","departuresFetch","fetchDepartures","allDepartures","fetchInfo","departures","functionWithPromise","item","Promise","resolve","anAsyncFunction","getInfo","all","map","then","data","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB;AACA,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFqB,CAIrB;;AACA,MAAMK,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMD,QAAQ,CAACF,WAAW,EAAZ,CAAd;AAAA,GAAtB,CALqB,CAOrB;AACA;;;AACAL,EAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACFQ,aAAa,EADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAEN,EAFM,CAAT;;AAIA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBD,IAAAA,aAAa;AACd,GAFD,CAbqB,CAgBrB;;;AACA,MAAME,QAAQ,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,UAAN,CAAiBC,eAA5B;AAAA,GAAD,CAA5B;AACA,MAAMC,eAAe,GAAGZ,WAAW,CACjC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACI,eAAN,CAAsBC,aAAjC;AAAA,GADiC,CAAnC;AAIA,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAGH,eAAe,CAACI,UAAnB,EAA+B;AAC7BD,IAAAA,SAAS;AACV;;AAED,MAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AACpC;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAP;AACD,GAHD;;AAKA,MAAMC,eAAe;AAAA,yEAAG,kBAAOH,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gDACfD,mBAAmB,CAACC,IAAD,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfG,eAAe;AAAA;AAAA;AAAA,KAArB;;AAIA,MAAMC,OAAO;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,gDACPH,OAAO,CAACI,GAAR,CACLX,eAAe,CAACI,UAAhB,CAA2BQ,GAA3B,CAA+B,UAACN,IAAD;AAAA,uBAAUG,eAAe,CAACH,IAAD,CAAzB;AAAA,eAA/B,CADK,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPI,OAAO;AAAA;AAAA;AAAA,KAAb;;AAMAA,EAAAA,OAAO,GAAGG,IAAV,CAAe,UAACC,IAAD,EAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEnB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApDQH,W;UAEUH,W,EAeAD,W,EACOA,W;;;KAlBjBI,W;AAsDT,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = () => dispatch(FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  };\n  //Selectors\n  const oneFetch = useSelector((state) => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(\n    (state) => state.fetchDepartures.allDepartures\n  );\n\n  let fetchInfo = \"\"\n  if(departuresFetch.departures) {\n    fetchInfo\n  }\n\n  const functionWithPromise = (item) => {\n    //a function that returns a promise\n    return Promise.resolve(\"ok\");\n  };\n\n  const anAsyncFunction = async (item) => {\n    return functionWithPromise(item);\n  };\n\n  const getInfo = async () => {\n    return Promise.all(\n      departuresFetch.departures.map((item) => anAsyncFunction(item))\n    );\n  };\n\n  getInfo().then((data) => {\n    console.log(data);\n  });\n\n  return (\n    <div>\n      <div></div>\n      <button onClick={getData}>Get data</button>\n    </div>\n  );\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}