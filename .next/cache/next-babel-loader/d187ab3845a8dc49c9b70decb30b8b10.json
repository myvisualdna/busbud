{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/components/table.js\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  return _ResultTable.apply(this, arguments);\n}\n\n_c2 = ResultTable;\n\nfunction _ResultTable() {\n  var _s = $RefreshSig$();\n\n  _ResultTable = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var dispatch, getFirstFetch, getData, oneFetch, departuresFetch;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _s();\n\n            //1. We call \"useDispatch\" (React hook) to trigger our request petition\n            dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n            getFirstFetch = function getFirstFetch() {\n              return dispatch(FetchAction());\n            }; //3. We call useEffect to trigger the request function defined on item 2.\n            //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n            useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return getFirstFetch();\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            })), []);\n\n            getData = function getData() {\n              getFirstFetch();\n            }; //Selectors\n\n\n            oneFetch = useSelector(function (state) {\n              return state.firstFetch.mainInformation;\n            });\n            departuresFetch = useSelector(function (state) {\n              return state.fetchDepartures.allDepartures;\n            });\n            return _context2.abrupt(\"return\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: getData,\n                children: \"Get data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 5\n            }, this));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }), \"lQhjc8z8Q4utlQIUEbpbQSaQWdg=\", false, function () {\n    return [useDispatch, useSelector, useSelector];\n  }));\n  return _ResultTable.apply(this, arguments);\n}\n\n_c = ResultTable;\nexport default ResultTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ResultTable\");\n$RefreshReg$(_c2, \"ResultTable\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/components/table.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Table","FetchAction","ResultTable","dispatch","getFirstFetch","getData","oneFetch","state","firstFetch","mainInformation","departuresFetch","fetchDepartures","allDepartures"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;SAEeC,W;;;;MAAAA,W;;;;;6EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACE;AACMC,YAAAA,QAFR,GAEmBJ,WAAW,EAF9B,EAIE;;AACMK,YAAAA,aALR,GAKwB,SAAhBA,aAAgB;AAAA,qBAAMD,QAAQ,CAACF,WAAW,EAAZ,CAAd;AAAA,aALxB,EAOE;AACA;;;AACAL,YAAAA,SAAS,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACFQ,aAAa,EADX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,IAEN,EAFM,CAAT;;AAIMC,YAAAA,OAbR,GAakB,SAAVA,OAAU,GAAM;AACpBD,cAAAA,aAAa;AACd,aAfH,EAgBE;;;AACME,YAAAA,QAjBR,GAiBmBR,WAAW,CAAC,UAACS,KAAD;AAAA,qBAAWA,KAAK,CAACC,UAAN,CAAiBC,eAA5B;AAAA,aAAD,CAjB9B;AAkBQC,YAAAA,eAlBR,GAkB0BZ,WAAW,CACjC,UAACS,KAAD;AAAA,qBAAWA,KAAK,CAACI,eAAN,CAAsBC,aAAjC;AAAA,aADiC,CAlBrC;AAAA,2DAuBI;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,OAAO,EAAEP,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;YAEmBN,W,EAeAD,W,EACOA,W;;;;;KAlBXI,W;AA8Bf,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nasync function ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = () => dispatch(FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  };\n  //Selectors\n  const oneFetch = useSelector((state) => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(\n    (state) => state.fetchDepartures.allDepartures\n  );\n\n  return (\n    <div>\n      <div></div>\n      <button onClick={getData}>Get data</button>\n    </div>\n  );\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}