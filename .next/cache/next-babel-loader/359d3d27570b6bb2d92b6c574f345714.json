{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andresnieves/Documents/React/busbud/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresnieves/Documents/React/busbud/components/table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  _s();\n\n  var _this = this;\n\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  var dispatch = useDispatch(); //2. We define a function that combines dispatch function + redux action\n\n  var getFirstFetch = function getFirstFetch() {\n    return dispatch(FetchAction());\n  }; //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getFirstFetch();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n\n  var getData = function getData() {\n    getFirstFetch();\n  }; //Selectors\n\n\n  var oneFetch = useSelector(function (state) {\n    return state.firstFetch.mainInformation;\n  });\n  var departuresFetch = useSelector(function (state) {\n    return state.fetchDepartures.allDepartures;\n  });\n  var fetchInfo = [];\n\n  if (departuresFetch.departures) {\n    var _fetchInfo = departuresFetch.departures;\n  }\n\n  var tableTest = \"\";\n\n  if (departuresFetch.departures) {\n    tableTest = /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: departuresFetch.departures[0].departure_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: departuresFetch.departures[0].arrival_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: departuresFetch.departures[0].prices.total\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: oneFetch.cities[0].short_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: oneFetch.cities[1].short_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n  function fetchRepoInfos() {\n    return _fetchRepoInfos.apply(this, arguments);\n  }\n\n  function _fetchRepoInfos() {\n    _fetchRepoInfos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var repos, promises, results;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              // load repository details for this array of repo URLs\n              repos = fetchInfo; // map through the repo list\n\n              promises = repos.map( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(repo) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          return _context2.abrupt(\"return\", {\n                            name: response.data.full_name,\n                            description: response.data.description\n                          });\n\n                        case 1:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); // wait until all promises resolve\n\n              _context3.next = 4;\n              return Promise.all(promises);\n\n            case 4:\n              results = _context3.sent;\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchRepoInfos.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tableTest, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fetchInfo.map(function (depart) {\n        /*#__PURE__*/\n        _jsxDEV(\"p\", {\n          children: depart.departure_time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getData,\n      children: \"Get data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Departure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Arrival Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price (in USD)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"2\",\n            children: \"Larry the Bird\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"@twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ResultTable, \"lQhjc8z8Q4utlQIUEbpbQSaQWdg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ResultTable;\nexport default ResultTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultTable\");","map":{"version":3,"sources":["/Users/andresnieves/Documents/React/busbud/components/table.js"],"names":["React","useEffect","useState","useSelector","useDispatch","Table","FetchAction","ResultTable","dispatch","getFirstFetch","getData","oneFetch","state","firstFetch","mainInformation","departuresFetch","fetchDepartures","allDepartures","fetchInfo","departures","tableTest","departure_time","arrival_time","prices","total","cities","short_name","fetchRepoInfos","repos","promises","map","repo","name","response","data","full_name","description","Promise","all","results","depart"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Table from \"react-bootstrap/Table\";\nimport FetchAction from \"../redux/actions/fetchAction\";\n\nfunction ResultTable() {\n  //1. We call \"useDispatch\" (React hook) to trigger our request petition\n  const dispatch = useDispatch();\n\n  //2. We define a function that combines dispatch function + redux action\n  const getFirstFetch = () => dispatch(FetchAction());\n\n  //3. We call useEffect to trigger the request function defined on item 2.\n  //The outcome will be saved on the redux store to be accessible from anywhere & anytime\n  useEffect(async () => {\n    await getFirstFetch();\n  }, []);\n\n  const getData = () => {\n    getFirstFetch();\n  };\n  //Selectors\n  const oneFetch = useSelector((state) => state.firstFetch.mainInformation);\n  const departuresFetch = useSelector(\n    (state) => state.fetchDepartures.allDepartures\n  );\n\n  let fetchInfo = [];\n  if (departuresFetch.departures) {\n    let fetchInfo = departuresFetch.departures;\n  }\n\n  let tableTest = \"\";\n  if (departuresFetch.departures) {\n    tableTest = (\n      <tr>\n        <td>{departuresFetch.departures[0].departure_time}</td>\n        <td>{departuresFetch.departures[0].arrival_time}</td>\n        <td>{departuresFetch.departures[0].prices.total}</td>\n        <td>{oneFetch.cities[0].short_name}</td>\n        <td>{oneFetch.cities[1].short_name}</td>\n      </tr>\n    );\n  }\n\n\n\n  async function fetchRepoInfos () {  \n    // load repository details for this array of repo URLs\n    const repos = fetchInfo;\n  \n    // map through the repo list\n    const promises = repos.map(async repo => {\n\n  \n      return {\n        name: response.data.full_name,\n        description: response.data.description\n      }\n    })\n  \n    // wait until all promises resolve\n    const results = await Promise.all(promises)\n  \n    // use the results\n  }\n\n\n\n\n  return (\n    <div>\n      {tableTest}\n      <div>\n        {fetchInfo.map((depart) => {\n          <p>{depart.departure_time}</p>;\n        })}\n      </div>\n      <button onClick={getData}>Get data</button>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Departure Time</th>\n            <th>Arrival Time</th>\n            <th>Price (in USD)</th>\n            <th>Origin</th>\n            <th>Destination</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>3</td>\n            <td colSpan=\"2\">Larry the Bird</td>\n            <td>@twitter</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default ResultTable;\n"]},"metadata":{},"sourceType":"module"}